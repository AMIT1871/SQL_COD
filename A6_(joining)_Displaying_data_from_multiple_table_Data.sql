 ------------------------ 4TH CHAPTER ------------------------------------------
----------- DISPLAYING DATA FROM MULTIPLE TABLES (JOINING)----------------------
-- ACORDING TO DRIVE VIDEOS                              -- IMP JOINING                                                     
                                                         -- v ch4.1  
                                                         -- EQUIJOIN 
SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES,DEPARTMENTS
WHERE EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_NAME, EMPLOYEES.DEPARTMENT_ID  -- ANY WHERE YOU WAT TO FATCH D_ID E/D
FROM EMPLOYEES,DEPARTMENTS
WHERE EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

SELECT EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, DEPARTMENTS.DEPARTMENT_NAME,
       DEPARTMENTS.DEPARTMENT_ID, EMPLOYEES.DEPARTMENT_ID -- ANY WHERE YOU WAT TO FATCH D_ID E/D
FROM EMPLOYEES,DEPARTMENTS
WHERE EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

SELECT E.LAST_NAME,D.DEPARTMENT_ID, D.DEPARTMENT_NAME  
FROM EMPLOYEES E, DEPARTMENTS D                          -- WE ARE CRIATED OBJECTS E AND D 
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;                 -- E=EMPLOYEES, D=DEPARTMENTS

--MORE THAN 2 TABLE JONING
SELECT E.LAST_NAME,D.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.CITY
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L                          
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND D.LOCATION_ID = L.LOCATION_ID;                                                                                                                
                                                            
                                                          -- v ch4.2  
                                                          -- NON EQUIJOINS
--WITH THE HELP OF RANGE  
SELECT E.LAST_NAME, E.SALARY, J.JOB_TITLE
FROM EMPLOYEES E, JOBS J
WHERE E.SALARY BETWEEN J.MIN_SALARY AND J.MAX_SALARY;   
      
                                                          -- v ch4.3  
--RIGHT OUTER J.                                          -- OUTER JOINING   
SELECT E.LAST_NAME,D.DEPARTMENT_ID, D.DEPARTMENT_NAME  
FROM EMPLOYEES E,DEPARTMENTS D                          
WHERE E.DEPARTMENT_ID(+) = D.DEPARTMENT_ID;  --RIGHT COLUMN KE ALL RECARDS AND LENF COLUMN KE ONLY MATCHED RECARDS

-- LEFT OUTER J.
SELECT E.LAST_NAME,D.DEPARTMENT_ID, D.DEPARTMENT_NAME  
FROM EMPLOYEES E,DEPARTMENTS D              --LEFT COLUMN KE ALL RECARDS AND RIGHT COLUMN KE ONLY MATCHED RECARDS             
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+);                                                                                                               
                                                          --TIME 8:04
                                                          --SELF JOINING
SELECT WORKER.LAST_NAME || ' WORKS FRO '|| MANAGER.LAST_NAME
FROM EMPLOYEES WORKER, EMPLOYEES MANAGER
WHERE WORKER.MANAGER_ID = MANAGER.EMPLOYEE_ID;
                                                         --TIME 24:22
                                                         -- CROSS JOINS(CARDITION PRODUCT)
SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES CROSS JOIN DEPARTMENTS;
                                                        
                                                        --TIME 29:31
                                                        -- NATURAL JOINS
SELECT DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID, CITY
FROM DEPARTMENTS NATURAL JOIN LOCATIONS;
     
   
    
--------------------- sql properity (you must rember this format)--------------
                                                    -- VERY IMP FORMAT
                                                    -- v ch4.3 TIME 32:56 
--SQL PROPIETARY  Q1 FOR EQUIJOIN
SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES JOIN DEPARTMENTS
ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;                                                 
-- JOIN REPLACE TO , AND ON REPLACE TO WHERE

--Q2 FOR EQUI JOIN
SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES JOIN DEPARTMENTS
USING(DEPARTMENT_ID);  

--Q1 AND Q2 ARE GIVE SAME ANS, Q2 ARE SORT FORMAT OF Q1 USING ONLY WHEN USE THNE COMMAN COLUMN NAME, TYPE ARE SAME


-- JOIN 3 TABLES
SELECT EMPLOYEE_ID, CITY, DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D            -- JOIN T1 AND T2
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID      
JOIN LOCATIONS L                               --AFTER JOIN T1,T2 THEN JOIN T3
ON D.LOCATION_ID = L.LOCATION_ID;


-- v ch4.4  
--LEFT OUTER JOINING                                             
SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D    
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;           -- ALL DATA OF LENF TABLE AS WELL AS ONLY MATCHED DATA OF RIGHT TABLE

--RIGHT OUTER JOINING
SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E RIGHT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;           -- ALL DATA OF RIGHT TABLE AS WELL AS ONLY MATCHED DATA OF LEFT TABLE

           
--FULLT OUTER JOINING
SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;           -- ALL DATA OF RIGHT TABLE AS WELL AS LEFT TABLE MACHED AND UNMACHED BOTH
           
  
--ADDITIONAL CONDITION(A1)        
SELECT E.EMPLOYEE_ID, E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_ID, D.LOCATION_ID, E.MANAGER_ID
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID) 
AND E.MANAGER_ID = 149;           -- FIRST JOIN AND THEN CONDITIONS
           
--ADDITIONAL CONDITION(A2)                     
SELECT E.EMPLOYEE_ID, E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_ID, D.LOCATION_ID, E.MANAGER_ID
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID) 
WHERE E.MANAGER_ID = 149;        -- FIRST CONDITION(WHERE) RUN AND THEN JOIN PERFORM
             
--A1 AND A2 BOTH ARE WORK SAME           
           
           


----------------------- SOLUTION OF COPY'S QUERY ------------------------------
                                                                  -- 30/01/2023
--NATURAL JOIN
SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID, JOB_TITLE
FROM EMPLOYEES NATURAL JOIN JOBS;              -- NATURAL JOIN AND EQUI JOIN WORKS SAME BUT SYNTAX ARE DIFFERENT
                                               -- THAT IS AUTOMATICALY DITECT WHICH TABLE ARE COMMAN
-- JOIN WITH USING CLAUSE
SELECT EMPLOYEE_ID, LAST_NAME, LOCATION_ID, DEPARTMENT_NAME
FROM EMPLOYEES JOIN DEPARTMENTS
USING (DEPARTMENT_ID);                        -- KIND OF NATURAL JOIN IT'S TAKE WHICH TABLE ARE COMMAN WITH THE HELP OF USING CLAUSE

-- CONDITION ON USING CLAUSE NATURAL JOIN
SELECT L.CITY, D.DEPARTMENT_NAME 
FROM LOCATIONS L  JOIN DEPARTMENTS D
USING (LOCATION_ID);                 
--WHERE D.LOCATION_ID = 1400;     -- WHERE CONDITION ARE NOT RUN WITH USING CLAUSE

-- ON CLAUSE
SELECT E.EMPLOYEE_ID, E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_ID, D.LOCATION_ID
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);       -- HEARE ON WORKS LIKE WHERE BUT WHERE ARE DIFFERENT (ON DEDECT COMMAN COLUMN)

--THREE WAY JOIN (JOIN 3 COLUMN)
SELECT EMPLOYEE_ID, CITY, DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
JOIN LOCATIONS L
ON D.LOCATION_ID = L.LOCATION_ID;
     
--ADDITIONAL CONDITION TO A JOIN
SELECT E.EMPLOYEE_ID, E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_ID, D.LOCATION_ID
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON(E.DEPARTMENT_ID = D.DEPARTMENT_ID)
AND E.MANAGER_ID = 149;
          
           --OR
SELECT E.EMPLOYEE_ID, E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_ID, D.LOCATION_ID
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON(E.DEPARTMENT_ID = D.DEPARTMENT_ID)
WHERE E.MANAGER_ID = 149;                
                
              
--SELF JOIN
SELECT WORKER.LAST_NAME  ||' WORKE''S FOR '|| MANAGER.LAST_NAME AS " W. WORKS FOR M. "
FROM EMPLOYEES WORKER JOIN EMPLOYEES MANAGER
ON(WORKER.MANAGER_ID = MANAGER.MANAGER_ID);
          
-- NON EQUIJOIN
SELECT E.LAST_NAME, E.SALARY, J.JOB_TITLE
FROM EMPLOYEES E JOIN JOBS J
ON E.SALARY BETWEEN J.MIN_SALARY AND J.MAX_SALARY;  -- LET BOTH HASE NO COMMAN COLUMN

-- LEFT OUTER JOIN
SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);

-- RIGHT OUTER JOIN
SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E RIGHT OUTER JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);
          
-- FULL OUTER JOIN
SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);
 
-- CROSS JOINS
SELECT LAST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES CROSS JOIN DEPARTMENTS;
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
 