--------------------------- 5th CHAPTER ----------------------------------------
---------------- Aggregating Data Using Group Functions ------------------------
                                                            -- DRIVE V CH5 
                                                    
SELECT  AVG(SALARY), MAX(SALARY), MIN(SALARY), SUM(SALARY)
FROM EMPLOYEES
WHERE JOB_ID LIKE '%REP%';

SELECT  MAX(HIRE_DATE), MIN(HIRE_DATE)
FROM EMPLOYEES;

SELECT  MAX(HIRE_DATE), MIN(HIRE_DATE)
FROM EMPLOYEES;

SELECT COUNT(*)               
FROM EMPLOYEES;

SELECT COUNT(COMMISSION_PCT)     -- ONLY COUNT WHICH HAVE COMMISSION_PCT     
FROM EMPLOYEES;                  -- O/P IS 35 BUT  TOTL 107


SELECT COUNT(DISTINCT DEPARTMENT_ID)    -- ELEMENATE DUPLICATE DATA       
FROM EMPLOYEES;

SELECT AVG(COMMISSION_PCT)   -- IT'S IGNORE NULL SO NO GIVE NOT PROPER ANS
FROM EMPLOYEES;

SELECT AVG(NVL(COMMISSION_PCT,0))
FROM EMPLOYEES;

SELECT DEPARTMENT_ID, AVG(SALARY)
FROM EMPLOYEES GROUP BY DEPARTMENT_ID ;

SELECT DEPARTMENT_ID, COUNT(*)
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID ;

SELECT DEPARTMENT_ID, MAX(SALARY)
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID ;

SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY)
FROM EMPLOYEES 
WHERE DEPARTMENT_ID >40
GROUP BY DEPARTMENT_ID, JOB_ID 
ORDER BY DEPARTMENT_ID ASC;

SELECT DEPARTMENT_ID, MAX(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90
GROUP BY DEPARTMENT_ID
HAVING MAX(SALARY) > 10000;

SELECT JOB_ID, SUM(SALARY) PAYROLL
FROM EMPLOYEES
WHERE JOB_ID NOT LIKE '%REP%'
GROUP BY JOB_ID
HAVING SUM(SALARY) > 13000
ORDER BY SUM(SALARY);

SELECT MAX(AVG(SALARY))
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;








